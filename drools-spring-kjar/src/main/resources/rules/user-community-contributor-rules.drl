package rules;

import forum.model.Post;
import forum.model.User;
import forum.model.PostLabelEnum;
import forum.model.UserLabelEnum;

import forum.event.DislikePostEvent;
import forum.event.LikePostEvent;
import forum.event.ReportPostEvent;
import forum.event.NewPostEvent;
import forum.event.DefaultUserActionEvent;
import forum.event.LikeQualityPostEvent;
import forum.event.CommunityContributorStreakEvent;
import forum.event.TopUserStreakEvent;

import forum.event.label.TopUserLabelEvent;
import forum.event.label.CommunityContributorUserLabelEvent;
import forum.event.label.SpammerUserLabelEvent;
import forum.event.label.HarmfulUserLabelEvent;
import forum.event.label.TemporarilySuspendedUserLabelEvent;
import forum.event.label.SuspendedUserLabelEvent;

import forum.event.label.TrendingPostLabelEvent;
import forum.event.label.PoorContentPostLabelEvent;
import forum.event.label.PotentiallyHarmfulPostLabelEvent;
import forum.event.label.HarmfulPostLabelEvent;

rule "Community contributor minute streak"
    when                 
        $u: User($uId: username)   
        not $e1: CommunityContributorStreakEvent(userId == $uId)    
        		over window:time(1m)  
        Number(intValue >= 5) from accumulate(
            $e2: LikeQualityPostEvent(userId == $uId)
            	over window:time(1m),
           	count($e2)
        )        
    then     
    	System.out.println("Community contributor minute streak: " + $uId);
        insert(new CommunityContributorStreakEvent($uId));            
end

rule "Community contributor label"
    when                 
        $u: User($uId: username, !userLabels.contains(UserLabelEnum.COMMUNITY_CONTRIBUTOR), !userLabels.contains(UserLabelEnum.SPAMMER))   
        not $e1: CommunityContributorUserLabelEvent(userId == $uId)      
        Number(intValue >= 3) from accumulate(
            $e2: CommunityContributorStreakEvent(userId == $uId)
            	over window:time(3m),
           	count($e2)
        )        
    then     
    	System.out.println("Community contributor label: " + $uId);
        insert(new CommunityContributorUserLabelEvent($uId));        
        $u.addLabel(UserLabelEnum.COMMUNITY_CONTRIBUTOR);
        update($u);    
end

rule "Revoke community contributor label (Not enough quality likes in the past minute)"
    when                 
        $u: User($uId: username, userLabels.contains(UserLabelEnum.COMMUNITY_CONTRIBUTOR))        
        $e1: CommunityContributorUserLabelEvent(userId == $uId)
        Number(intValue < 5) from accumulate(
            $e2: LikeQualityPostEvent(userId == $uId)
            	over window:time(1m),
           	count($e2)
        )        
        not $e3: CommunityContributorStreakEvent(userId == $uId)    
        		over window:time(1m)   
    then     
    	System.out.println("Revoke community contributor label (Not enough quality likes in the past minute): " + $uId);
        delete($e1);
    	$u.removeLabel(UserLabelEnum.COMMUNITY_CONTRIBUTOR);
    	update($u);        
end

rule "Revoke community contributor label (Spammer)"
    when                 
        $u: User($uId: username, userLabels.contains(UserLabelEnum.COMMUNITY_CONTRIBUTOR), userLabels.contains(UserLabelEnum.SPAMMER))
        $e: CommunityContributorUserLabelEvent(userId == $uId)
    then     
    	System.out.println("Revoke community contributor label (Spammer): " + $uId);
        delete($e);
    	$u.removeLabel(UserLabelEnum.COMMUNITY_CONTRIBUTOR);
    	update($u);        
end
