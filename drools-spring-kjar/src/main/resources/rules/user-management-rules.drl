package rules;

import forum.model.Post;
import forum.model.User;
import forum.model.PostLabelEnum;
import forum.model.UserLabelEnum;

import forum.event.DislikePostEvent;
import forum.event.LikePostEvent;
import forum.event.ReportPostEvent;
import forum.event.NewPostEvent;
import forum.event.DefaultUserActionEvent;

import forum.event.label.TopUserLabelEvent;
import forum.event.label.CommunityContributorUserLabelEvent;
import forum.event.label.SpammerUserLabelEvent;
import forum.event.label.HarmfulUserLabelEvent;
import forum.event.label.TemporarilySuspendedUserLabelEvent;
import forum.event.label.SuspendedUserLabelEvent;

import forum.event.label.TrendingPostLabelEvent;
import forum.event.label.PoorContentPostLabelEvent;
import forum.event.label.PotentiallyHarmfulPostLabelEvent;
import forum.event.label.HarmfulPostLabelEvent;

rule "Revoke top user label (Spammer)"
    when                 
        $u: User($uId: username, userLabels.contains(UserLabelEnum.TOP_USER), userLabels.contains(UserLabelEnum.SPAMMER))
        $e: TopUserLabelEvent(userId == $uId)
    then     
        delete($e);
    	$u.removeLabel(UserLabelEnum.TOP_USER);
    	update($u);        
end

rule "Revoke spammer label (timeout)"
    when        
        $u: User($uId: username, userLabels.contains(UserLabelEnum.SPAMMER))
        not	$e1: SpammerUserLabelEvent(userId == $uId)
        	over window:time(24h)
    then      
    	$u.removeLabel(UserLabelEnum.SPAMMER);
    	update($u);        
end

rule "Revoke community contributor label (Spammer)"
    when                 
        $u: User($uId: username, userLabels.contains(UserLabelEnum.COMMUNITY_CONTRIBUTOR), userLabels.contains(UserLabelEnum.SPAMMER))
        $e: CommunityContributorUserLabelEvent(userId == $uId)
    then     
        delete($e);
    	$u.removeLabel(UserLabelEnum.COMMUNITY_CONTRIBUTOR);
    	update($u);        
end

rule "More than 45 actions in a minute by user"
    when        
        $d1: DefaultUserActionEvent($uId: userId)            
        $u: User(username == $uId, !userLabels.contains(UserLabelEnum.SPAMMER))
        Number(intValue >= 45) from accumulate(
            $d2: DefaultUserActionEvent(
            	userId == $uId, 
                this meets[1m] $d1),
            count($d2)
        )
    then
        System.out.println("WARNING: Spammer user. User " + $u.getName());        
        insert(new SpammerUserLabelEvent($uId));
    	$u.addLabel(UserLabelEnum.SPAMMER);
    	update($u);        
end

rule "More than 10 posts in 5 minutes"
    when        
        $e1: NewPostEvent($uId: userId)            
        $u: User(username == $uId, !userLabels.contains(UserLabelEnum.SPAMMER))
        Number(intValue >= 10) from accumulate(
            $e2: NewPostEvent(
            	userId == $uId, 
                this meets[5m] $e1),
            count($e2)
        )
    then
        System.out.println("WARNING: Spammer user. User " + $u.getName());        
        insert(new SpammerUserLabelEvent($uId));
    	$u.addLabel(UserLabelEnum.SPAMMER);
    	update($u);        
end

rule "Label user as harmful"
    when        
        $p: Post($uId: postOwnerId, postLabels.contains(PostLabelEnum.HARMFUL))            
        $u: User(username == $uId, !userLabels.contains(UserLabelEnum.HARMFUL_USER))
    then
        System.out.println("WARNING: Harmful user. User " + $u.getName());        
        insert(new HarmfulUserLabelEvent($uId));
    	$u.addLabel(UserLabelEnum.HARMFUL_USER);
    	update($u);        
end

        